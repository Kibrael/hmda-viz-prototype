for MSA in selector.report_list['A 4-2']:
    build43 = build()
    build43.set_msa_names(cur) #builds a list of msa names as a dictionary
    location = (MSA,) #pass the MSA nubmers as a tuple to Psycopg2 (doesn't take singletons)
    if selector.report_list['year'][1] == '2012':
        SQL = queries.count_rows_43_2012()
    elif selector.report_list['year'][1] == '2013':
        SQL = queries.count_rows_43_2013()
    else:
        print "invalid year in selection"
    cur.execute(SQL, location)
    count = int(cur.fetchone()[0])

    if count > 0:
        print count, 'LAR rows in MSA %s, for report 4-2, in %s' %(MSA, selector.report_list['year'][1])
        if selector.report_list['year'][1] == '2012':
            SQL = queries.table_4_2_2012()
        elif selector.report_list['year'][1] == '2013':
            SQL = queries.table_4_2_2013()
        else:
            print "invalid year in input file"

        cur.execute(SQL, location)
        for num in range(0, count):
            row = cur.fetchone()
            parsed.parse_t4x(row)
            if num == 0:
                build43.set_header(parsed.inputs, MSA, build43.table_headers('4-2'), 'Aggregate', '4-2')
                table43 = build43.table_4x_builder()

            agg.build_report4x(table43, parsed.inputs)
        path = "json" + "/" +table43['type']+"/"+table43['year']+"/"+build43.get_state_name(table43['msa']['state']).lower()+"/"+build43.msa_names[MSA].replace(' ', '-').lower()+"/"+table43['table']
        if not os.path.exists(path): #check if path exists
            os.makedirs(path) #if path not present, create it
        build43.write_JSON('4-1.json', table43, path)
        build43.jekyll_for_report(path) #create and write jekyll file to report path
        #year in the path is determined by the asofdate in the LAR entry
        path2 = "json"+"/"+table43['type']+"/"+table43['year']+"/"+build43.get_state_name(table43['msa']['state']).lower()+"/"+build43.msa_names[MSA].replace(' ', '-').lower() #set path for writing the jekyll file to the msa directory
        build43.jekyll_for_msa(path2) #create and write jekyll file to the msa path